generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Aluno {
  id_aluno        String   @id @default(uuid())
  nome_aluno      String
  matricula_aluno Int      @unique
  email_aluno     String   @unique
  curso_aluno     String
  grupo_lider     Grupo?   @relation("Liderança")
  grupo_aluno     Grupo    @relation("Membros", fields: [id_grp], references: [id_grp])
  id_grp          String
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now())
}

model Professor {
  id_prof    String   @id @default(uuid())
  nome_prof  String
  email_prof String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Grupo {
  id_grp     String   @id @default(uuid())
  nome_grp   String
  lider      Aluno    @relation("Liderança", fields: [id_lider], references: [id_aluno])
  id_lider   String   @unique
  alunos     Aluno[]  @relation("Membros")
  estande    Estande  @relation("Estande", fields: [id_estande], references: [id_estande])
  id_estande String
  nota_grp   Float
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Estande {
  id_estande     String   @id @default(uuid())
  numero_estande Int
  grupos         Grupo[]  @relation("Estande")
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now())
}

model Avaliacao_Professor {
  id_avaliacao_prof String   @id @default(uuid())
  nota_ava_prof     Float
  horario           DateTime
  created_at        DateTime @default(now())
  updated_at        DateTime @default(now())
}

model Avaliacao_Aluno {
  id_avaliacao_aluno String   @id @default(uuid())
  nota_ava_aluno     Float
  horario            DateTime
  created_at         DateTime @default(now())
  updated_at         DateTime @default(now())
}
